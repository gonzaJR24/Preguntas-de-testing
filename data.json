{
  "questions": [
    {
      "question": "¿Cuál de las siguientes afirmaciones describe mejor el acto de 'probar' en software?",
      "options": [
        "Escribir código sin defectos",
        "Ejecutar un conjunto de pruebas para asegurar la ausencia de errores",
        "Planificar, ejecutar y analizar pruebas con el objetivo de evaluar y mejorar la calidad del producto",
        "Depurar el código para eliminar fallos"
      ],
      "correct": 2
    },
    {
      "question": "¿Qué diferencia fundamental existe entre probar y depurar?",
      "options": [
        "Probar busca detectar defectos, mientras que depurar identifica y corrige su causa",
        "Probar se realiza por desarrolladores, depurar por testers",
        "Ambos procesos son equivalentes",
        "Depurar se realiza antes de probar"
      ],
      "correct": 0
    },
    {
      "question": "En el contexto de testing, ¿qué describe un 'error'?",
      "options": [
        "Una falla en la ejecución del sistema",
        "Una acción humana incorrecta que introduce un defecto",
        "Una deficiencia en el producto que genera un fallo",
        "Un comportamiento inesperado del software"
      ],
      "correct": 1
    },
    {
      "question": "Durante una revisión, un analista detecta un requerimiento ambiguo antes de escribir el código. ¿Qué tipo de prueba o técnica aplica?",
      "options": [
        "Prueba dinámica",
        "Prueba estática",
        "Prueba funcional",
        "Prueba de integración"
      ],
      "correct": 1
    },
    {
      "question": "Si el sistema se bloquea al introducir datos inválidos, ¿qué término describe este evento?",
      "options": [
        "Error",
        "Defecto",
        "Fallo",
        "Causa raíz"
      ],
      "correct": 2
    },
    {
      "question": "Un desarrollador introduce una condición lógica incorrecta en el código, pero el fallo solo ocurre bajo ciertas circunstancias. ¿Cómo se clasifica esta acción?",
      "options": [
        "Defecto",
        "Error",
        "Fallo",
        "Causa raíz"
      ],
      "correct": 1
    },
    {
      "question": "Durante una investigación de defectos, se descubre que una mala interpretación de los requisitos provocó múltiples problemas. ¿Qué representa esto?",
      "options": [
        "Un error humano",
        "Un fallo",
        "Una causa raíz",
        "Un defecto menor"
      ],
      "correct": 2
    },
    {
      "question": "¿Cuál es la principal diferencia entre pruebas dinámicas y estáticas?",
      "options": [
        "Las dinámicas se realizan sobre documentación, las estáticas sobre código",
        "Las dinámicas requieren ejecución del software, las estáticas no",
        "Las estáticas se aplican solo en entornos de producción",
        "Las dinámicas son exclusivamente automatizadas"
      ],
      "correct": 1
    },
    {
      "question": "¿Qué objetivo NO pertenece a las pruebas de software?",
      "options": [
        "Provocar fallos y encontrar defectos",
        "Asegurar el cumplimiento de requisitos",
        "Demostrar la ausencia total de errores",
        "Reducir el riesgo del producto"
      ],
      "correct": 2
    },
    {
      "question": "¿Qué representa la 'causa raíz' en un ciclo de defectos?",
      "options": [
        "El defecto más grave encontrado",
        "La razón fundamental que originó el defecto",
        "El tipo de prueba que detectó el fallo",
        "El error más frecuente en un módulo"
      ],
      "correct": 1
    },
    {
      "question": "¿Qué principio del testing indica que los defectos tienden a concentrarse en áreas específicas del sistema?",
      "options": [
        "La ausencia de errores es una falacia",
        "La agrupación de defectos",
        "El testing temprano",
        "El testing exhaustivo es imposible"
      ],
      "correct": 1
    },
    {
      "question": "¿Por qué la ausencia de errores no garantiza un producto útil?",
      "options": [
        "Porque el software puede ser perfecto pero no satisfacer las necesidades del usuario",
        "Porque siempre existen defectos ocultos",
        "Porque las pruebas nunca son suficientes",
        "Porque los testers no tienen tiempo para revisar todo"
      ],
      "correct": 0
    },
    {
      "question": "Un tester detecta un defecto en una historia de usuario durante la fase de requisitos. ¿Qué principio se está aplicando?",
      "options": [
        "El testing temprano",
        "El testing exhaustivo es imposible",
        "La agrupación de defectos",
        "La ausencia de errores es una falacia"
      ],
      "correct": 0
    },
    {
      "question": "¿Qué diferencia existe entre pruebas y aseguramiento de calidad (QA)?",
      "options": [
        "Las pruebas son preventivas y QA correctivo",
        "Las pruebas son correctivas, QA es preventivo",
        "Ambos conceptos son idénticos",
        "QA se limita a automatizar pruebas"
      ],
      "correct": 1
    },
    {
      "question": "En un escenario donde un sistema no responde al presionar un botón, ¿qué término describe mejor el evento observado?",
      "options": [
        "Defecto",
        "Fallo",
        "Error",
        "Causa raíz"
      ],
      "correct": 1
    },
    {
      "question": "Un tester identifica que un defecto se repite en el mismo módulo a pesar de múltiples correcciones. ¿Qué principio del testing explica esta situación?",
      "options": [
        "Testing muestra la presencia de errores",
        "Los errores se agrupan",
        "Testing temprano",
        "La ausencia de errores es una falacia"
      ],
      "correct": 1
    },
    {
      "question": "¿Qué describe mejor una prueba?",
      "options": [
        "Un conjunto de actividades destinadas a encontrar defectos y evaluar la calidad de un artefacto",
        "Una técnica para eliminar defectos",
        "Un documento de planificación de pruebas",
        "Un procedimiento de compilación de código"
      ],
      "correct": 0
    },
    {
      "question": "Si una prueba revela un fallo y posteriormente se identifica un defecto en el código, ¿qué relación existe entre ambos?",
      "options": [
        "El fallo es la causa del defecto",
        "El defecto es la causa del fallo",
        "Ambos términos son equivalentes",
        "El defecto ocurre después del fallo"
      ],
      "correct": 1
    },
    {
      "question": "¿Cuál de las siguientes afirmaciones es cierta sobre los objetivos del testing?",
      "options": [
        "Garantizar la ausencia total de defectos",
        "Verificar que el producto cumple los requisitos y reducir el riesgo",
        "Aumentar la complejidad del código",
        "Eliminar todas las causas raíz"
      ],
      "correct": 1
    },
     {
      "question": "¿Cuál de las siguientes describe mejor la planificación de pruebas?",
      "options": [
        "Identificar las condiciones de prueba",
        "Definir los objetivos y el enfoque de la prueba",
        "Ejecutar los casos de prueba planificados",
        "Analizar los defectos encontrados"
      ],
      "correct": 1
    },
    {
      "question": "Durante la planificación de pruebas, ¿qué se establece como prioridad?",
      "options": [
        "Diseñar los datos de prueba",
        "Identificar los defectos críticos",
        "Definir los objetivos, recursos y cronograma del testing",
        "Documentar los resultados"
      ],
      "correct": 2
    },
    {
      "question": "¿Qué ocurre durante la monitorización y control de pruebas?",
      "options": [
        "Se define el alcance de las pruebas",
        "Se evalúa el progreso de las pruebas y se toman acciones correctivas",
        "Se crean las condiciones de prueba",
        "Se validan los requisitos del sistema"
      ],
      "correct": 1
    },
    {
      "question": "¿Qué actividad implica identificar las características a probar?",
      "options": [
        "Diseño de pruebas",
        "Implementación de pruebas",
        "Análisis de pruebas",
        "Planificación de pruebas"
      ],
      "correct": 2
    },
    {
      "question": "En la fase de diseño de pruebas, ¿qué se busca principalmente?",
      "options": [
        "Definir cómo se probará cada requisito",
        "Monitorear la ejecución de pruebas",
        "Cargar los datos al ambiente de producción",
        "Identificar defectos en ejecución"
      ],
      "correct": 0
    },
    {
      "question": "¿Qué actividad incluye la creación de datos de prueba y la configuración del entorno?",
      "options": [
        "Implementación de pruebas",
        "Ejecución de pruebas",
        "Diseño de pruebas",
        "Planificación de pruebas"
      ],
      "correct": 0
    },
    {
      "question": "Durante la ejecución de pruebas, ¿qué acción se realiza?",
      "options": [
        "Se definen los objetivos de las pruebas",
        "Se identifican las condiciones de prueba",
        "Se ejecutan los casos de prueba y se registran los resultados",
        "Se documentan las lecciones aprendidas"
      ],
      "correct": 2
    },
    {
      "question": "¿Qué se hace durante la actividad de compleción de pruebas?",
      "options": [
        "Se ejecutan los casos pendientes",
        "Se cierra el ambiente y se analizan los resultados para mejorar futuros ciclos",
        "Se definen nuevos requisitos",
        "Se automatizan las pruebas"
      ],
      "correct": 1
    },
    {
      "question": "Un tester detecta que los objetivos de la prueba no se cumplirán según lo planeado. ¿Qué actividad debe realizar?",
      "options": [
        "Ejecución de pruebas",
        "Monitorización y control de prueba",
        "Diseño de pruebas",
        "Análisis de pruebas"
      ],
      "correct": 1
    },
    {
      "question": "Si un equipo discute qué probar y en qué orden, ¿en qué fase se encuentran?",
      "options": [
        "Planificación de pruebas",
        "Análisis de pruebas",
        "Diseño de pruebas",
        "Ejecución de pruebas"
      ],
      "correct": 1
    },
    {
      "question": "¿Qué distingue al análisis de pruebas del diseño de pruebas?",
      "options": [
        "El análisis define qué probar; el diseño define cómo probarlo",
        "El diseño define los objetivos; el análisis ejecuta los casos",
        "Ambas son idénticas",
        "El análisis solo se aplica en pruebas automatizadas"
      ],
      "correct": 0
    },
    {
      "question": "¿Cuál es un producto típico de salida de la fase de planificación?",
      "options": [
        "Casos de prueba ejecutables",
        "Plan de pruebas documentado",
        "Datos de prueba generados",
        "Informe de defectos"
      ],
      "correct": 1
    },
    {
      "question": "Durante la implementación, el ambiente de prueba presenta errores de configuración. ¿Qué acción es más adecuada?",
      "options": [
        "Repetir el análisis de requisitos",
        "Corregir la configuración y verificar el entorno antes de ejecutar pruebas",
        "Reescribir los casos de prueba",
        "Ejecutar pruebas en un entorno distinto sin validación"
      ],
      "correct": 1
    },
    {
      "question": "¿Cuál de las siguientes NO es una actividad de prueba reconocida?",
      "options": [
        "Planificación",
        "Implementación",
        "Codificación",
        "Ejecución"
      ],
      "correct": 2
    },
    {
      "question": "Un equipo realiza un informe con métricas de cobertura y defectos tras terminar un ciclo de testing. ¿Qué actividad están ejecutando?",
      "options": [
        "Ejecución de pruebas",
        "Monitorización y control de prueba",
        "Compleción de pruebas",
        "Diseño de pruebas"
      ],
      "correct": 2
    },
    {
      "question": "¿Por qué se dice que las pruebas dependen del contexto?",
      "options": [
        "Porque todas las pruebas deben ejecutarse igual en cualquier proyecto",
        "Porque el enfoque y la profundidad de las pruebas cambian según el tipo de software y sus riesgos",
        "Porque las pruebas se adaptan a la personalidad del tester",
        "Porque las herramientas de testing siempre cambian"
      ],
      "correct": 1
    },
    {
      "question": "En un proyecto ágil, el tester participa en la revisión de historias de usuario antes del desarrollo. ¿Qué principio se aplica?",
      "options": [
        "Testing temprano",
        "Testing exhaustivo es imposible",
        "Agrupación de defectos",
        "La paradoja del pesticida"
      ],
      "correct": 0
    },
    {
      "question": "Si durante la ejecución se detecta que los casos de prueba no cubren todos los requisitos, ¿qué se debe hacer?",
      "options": [
        "Modificar los casos de prueba durante la ejecución",
        "Volver a la fase de diseño de pruebas para ajustar las condiciones y cobertura",
        "Finalizar el ciclo sin cambios",
        "Esperar a la fase de compleción"
      ],
      "correct": 1
    },
    {
      "question": "En un escenario donde el ambiente de pruebas se cae constantemente, ¿qué fase está fallando su propósito?",
      "options": [
        "Implementación de pruebas",
        "Diseño de pruebas",
        "Ejecución de pruebas",
        "Compleción de pruebas"
      ],
      "correct": 0
    },
    {
      "question": "Durante la revisión final del proyecto, el equipo analiza qué funcionó y qué debe mejorarse en futuros ciclos. ¿A qué actividad pertenece esto?",
      "options": [
        "Planificación de pruebas",
        "Análisis de pruebas",
        "Monitorización y control de prueba",
        "Compleción de pruebas"
      ],
      "correct": 3
    }
  ]
}
